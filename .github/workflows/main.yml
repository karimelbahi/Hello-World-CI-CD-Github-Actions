# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:


# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  lint:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Checkout the code
        uses: actions/checkout@v3

      - name: Run lint
        run: echo lint

#      - name: Run lint
#        run: ./gradlew lintDebug
#
#      - name: Upload html test report
#        uses: actions/upload-artifact@v3
#        with:
#          name: lint.html
#          path: app/build/reports/lint-results-debug.html

  unit-test:
    needs: [ lint ]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the code
        uses: actions/checkout@v3

      - name: Run unit-test
        run: echo unit-test

#      - name: Run tests
#        run: ./gradlew test
#
#      - name: Upload test report
#        uses: actions/upload-artifact@v3
#        with:
#          name: unit_test_report
#          path: app/build/reports/tests/testDebugUnitTest/

  instrumentation-test:
    needs: [ unit-test ]
    runs-on: macos-latest
    steps:
      - name: Checkout the code
        uses: actions/checkout@v3

      - name: Run espresso tests
        run: echo espresso tests

#      - name: set up JDK 11
#        uses: actions/setup-java@v1
#        with:
#         java-version: 11
#
#      - name: Run espresso tests
#        uses: reactivecircus/android-emulator-runner@v2
#        with:
#          api-level: 29
#          script: ./gradlew connectedCheck
#
#      - name: Upload test report
#        uses: actions/upload-artifact@v3
#        with:
#          name: instrumentation_test_report
#          path: app/build/reports/androidTests/connected/

  static-code-analysis:
    needs: [instrumentation-test]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the code
        uses: actions/checkout@v3

      - name: Run static code analysis
        run: echo static code analysis

#      - name: set up JDK 11
#        uses: actions/setup-java@v1
#        with:
#          java-version: 11
#
#      - name: SonarCloud Scan
#        run: ./gradlew app:sonarqube -Dsonar.login=${{ secrets.SONAR_TOKEN }}
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  package:
    needs: [ static-code-analysis ]
    name: Generate APK
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the code
        uses: actions/checkout@v2

      - name: set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - name: Build debug APK
        run: ./gradlew assembleDebug

      - name: Upload APK
        uses: actions/upload-artifact@v2
        with:
          name: Hello-World-CI-CD-Github-Actions.apk
          path: app/build/outputs/apk/debug/app-debug.apk

  builds:
    needs: [ package ]
    runs-on: ubuntu-latest
    steps:
        - name: Checkout
          uses: actions/checkout@v2

        - name: Setup Java JDK
          uses: actions/setup-java@v1
          with:
            java-version: 11

        - name: Build Gradle
          run: ./gradlew build

        - name: Upload a Build Artifact
          uses: actions/upload-artifact@v2
          with:
            name: app
            path: app/build/outputs/apk/debug/app-debug.apk

        - name: Upload Artifact To Firebase App Distribution
          uses: wzieba/Firebase-Distribution-Github-Action@v1.3.2
          with:
            appId: ${{ secrets.FIREBASE_ID }}
            token: ${{ secrets.FIREBASE_TOKEN }}
            groups: QA
            releaseNotes: "Hey! This my first integrate Firebase distributions with Github Actions"
            file: app/build/outputs/apk/debug/app-debug.apk

